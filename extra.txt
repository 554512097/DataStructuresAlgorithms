线性表1.初始化：Init_List()初始条件：表L不存在操作结果：构造一个空的线性表2.销毁线性表：Destroy_List(L)初始条件：表L存在操作结果：销毁线性表3.求线性表的长度：Length_List(L)初始条件：表L存在操作结果：返回线性表所含元素个数4.检索查找：Locate_List(L,x),x是给定的一个数据元素初始条件：表L存在操作结果：返回在L中首次出现值为x的元素的序号或地址5.插入操作：Insert_List(L,i,x)初始条件：表L存在,插入位置i正确操作结果：在线性表第i个位置上插入一个值为x的新元素6.删除操作：Delete_List(L,i)初始条件：表L存在,删除位置i正确操作结果：删除序号为i的元素顺序表定义#define MAXSIZE 100typedef struct node {	DateType data[MAXSIZE];	int length;}SeqList, *PSeqList;链表typedef struct node{	DateType fsys'	struct node *next;}LNode, *LinkList;循环链表、双向链表栈（顺序以及链式存储）1.初始化2.判空栈3.入栈4.出栈5.取栈顶6.销毁栈队列（顺序以及链式存储）